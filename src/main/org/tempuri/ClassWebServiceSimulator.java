
package org.tempuri;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClassWebServiceSimulator", portName="ClassWebServicePort", serviceName="ClassWebService",targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public class ClassWebServiceSimulator implements ClassWebServiceImplSoap {


    /**
     * This web method allows a client application to submit CA XML queries for iCLASS and eCLASS processing.  iCLASS supports CA XML Visa Queries and eCLASS supports CA XML Visa Queries, CA XML Long Comment Queries and CA XML Unique ID Queries.  An error or timeout response will be provided if a timeout or error occurs.
     * 
     * @param eClassQueryResponse
     * @param iClassQuery
     * @param iClassQueryResponse
     * @param eClassQuery
     */

/* I don't know if the class needs these if they exist in the interface...
    @WebMethod(operationName = "ProcessQueries", action = "http://tempuri.org/ProcessQueries")
    @RequestWrapper(localName = "ProcessQueries", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProcessQueries")
    @ResponseWrapper(localName = "ProcessQueriesResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProcessQueriesResponse")
*/
    public void processQueries(
        @WebParam(name = "iClassQuery", targetNamespace = "http://tempuri.org/")
        String iClassQuery,
        @WebParam(name = "eClassQuery", targetNamespace = "http://tempuri.org/")
        String eClassQuery,
        @WebParam(name = "iClassQueryResponse", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> iClassQueryResponse,
        @WebParam(name = "eClassQueryResponse", targetNamespace = "http://tempuri.org/", mode = WebParam.Mode.OUT)
        Holder<String> eClassQueryResponse) {

		iClassQueryResponse="Test Canned iClass Response";
		eClassQueryResponse="Test Canned eClass Response";


	};

    /**
     * This Web method allows a client application to ping the web service to test for web service availability.
     * 
     */
/* Again, I am not sure if these are needed if 
    @WebMethod(operationName = "Ping", action = "http://tempuri.org/Ping")
    @RequestWrapper(localName = "Ping", targetNamespace = "http://tempuri.org/", className = "org.tempuri.Ping")
    @ResponseWrapper(localName = "PingResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PingResponse")
*/
    public void ping() {

		int i=5;
		i++;

	};

}
